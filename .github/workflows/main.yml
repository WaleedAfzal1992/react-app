name: Deploy React App to AWS ECR and ECS

on:
  push:
    branches:
      - main  # Trigger deployment on push to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Set the Node.js version

      # Step 3: Install dependencies and build the React app
      - name: Install Dependencies and Build
        run: |
          cd frontend  # Navigate to the frontend directory
          npm install
          npm run build  # Generate the build

      # Step 4: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 5: Build Docker image
      - name: Build Docker Image
        run: |
          cd frontend  # Navigate to the frontend directory
          docker build -t my-react-app .  # Build the Docker image in the frontend directory

      # Step 6: Log in to AWS ECR
      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 061051224547.dkr.ecr.us-east-1.amazonaws.com

      # Step 7: Tag Docker Image
      - name: Tag Docker Image
        run: |
          docker tag my-react-app:latest 061051224547.dkr.ecr.us-east-1.amazonaws.com/my-react-app:latest

      # Step 8: Push Docker Image to ECR
      - name: Push Docker Image to ECR
        run: |
          docker push 061051224547.dkr.ecr.us-east-1.amazonaws.com/my-react-app:latest

      # Step 9: Register ECS Task Definition (Inline JSON)
      - name: Register ECS Task Definition
        run: |
          aws ecs register-task-definition \
            --family my-react-app-task \
            --container-definitions '[
              {
                "name": "my-react-container",
                "image": "061051224547.dkr.ecr.us-east-1.amazonaws.com/my-react-app:latest", 
                "cpu": 0,
                "portMappings": [
                  {
                    "name": "my-react-app-3000-tcp",
                    "containerPort": 3000,
                    "hostPort": 3000,
                    "protocol": "tcp",
                    "appProtocol": "http"
                  }
                ],
                "essential": true,
                "environment": [],
                "environmentFiles": [],
                "mountPoints": [],
                "volumesFrom": [],
                "ulimits": [],
                "logConfiguration": {
                  "logDriver": "awslogs",
                  "options": {
                    "awslogs-group": "/ecs/my-react-app",
                    "mode": "non-blocking",
                    "awslogs-create-group": "true",
                    "max-buffer-size": "25m",
                    "awslogs-region": "us-east-1",
                    "awslogs-stream-prefix": "ecs"
                  },
                  "secretOptions": []
                },
                "systemControls": []
              }
            ]' 
            "family": "my-react-app-task",
            "executionRoleArn": "arn:aws:iam::061051224547:role/ecsTaskExecutionRole",
            "networkMode": "awsvpc",
            "revision": 2,
            "volumes": [],
            "status": "ACTIVE",
            "requiresAttributes": [
                {
                    "name": "com.amazonaws.ecs.capability.logging-driver.awslogs"
                },
                {
                    "name": "ecs.capability.execution-role-awslogs"
                },
                {
                    "name": "com.amazonaws.ecs.capability.ecr-auth"
                },
                {
                    "name": "com.amazonaws.ecs.capability.docker-remote-api.1.19"
                },
                {
                    "name": "com.amazonaws.ecs.capability.docker-remote-api.1.28"
                },
                {
                    "name": "ecs.capability.execution-role-ecr-pull"
                },
                {
                    "name": "com.amazonaws.ecs.capability.docker-remote-api.1.18"
                },
                {
                    "name": "ecs.capability.task-eni"
                },
                {
                    "name": "com.amazonaws.ecs.capability.docker-remote-api.1.29"
                }
            ],
            "placementConstraints": [],
            "compatibilities": [
                "EC2",
                "FARGATE"
            ],
            "requiresCompatibilities": [
                "FARGATE"
            ],
            "cpu": "1024",
            "memory": "3072",
            "runtimePlatform": {
                "cpuArchitecture": "X86_64",
                "operatingSystemFamily": "LINUX"
            },
            "registeredAt": "2024-11-08T15:33:40.624Z",
            "registeredBy": "arn:aws:iam::061051224547:root",
            "tags": []
            }
